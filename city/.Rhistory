node_names <- strsplit(agg[idx][1], '-')
#add_vertices(ny_graph, 2, list(agg[[idx]]))
print(idx)
}
for (idx in ls(agg))
{
node_names <- strsplit(agg[[idx]][1], '-')
#add_vertices(ny_graph, 2, list(agg[[idx]]))
print(idx)
}
print(agg)
print(idx)
print(agg[idx])
print(agg[[idx]])
node_names <- strsplit(idx, '-')
print(node_names)
add_vertices(ny_graph, 2, ,list(node_names[1], node_names[2]) )
library(igraph)
add_vertices(ny_graph, 2, ,list(node_names[1], node_names[2]) )
# build a graph with to/from locations as nodes,
#   and avg_trip and total_trips as edge attributes
ny_graph <- graph()
add_vertices(ny_graph, 2, ,list(node_names[1], node_names[2]) )
# build a graph with to/from locations as nodes,
#   and avg_trip and total_trips as edge attributes
ny_graph <- graph(c())
# build a graph with to/from locations as nodes,
#   and avg_trip and total_trips as edge attributes
ny_graph <- graph.empty()
plot(ny_graph)
View(ny_graph)
# build a graph with to/from locations as nodes,
#   and avg_trip and total_trips as edge attributes
ny_graph <- graph.empty(0, TRUE)
plot(ny_graph)
print(node_names)
add_vertices(ny_graph, 2, ,list(node_names[1], node_names[2]) )
add_vertices(ny_graph, 2, NULL,list(node_names[1], node_names[2]) )
add_vertices(ny_graph, 2, color='blue',list(node_names[1], node_names[2]) )
print(node_names)
print(agg[[idx]])
print(idx)
#add_vertices(ny_graph, 2, color='blue',list(node_names[1], node_names[2]) )
ny_graph <- ny_graph + vertex(node_names[1])
ny_graph <- ny_graph + vertex(node_names[2])
plot(ny_graph)
ny_graph <- ny_graph + edge(node_names[1], node_names[2])
plot(ny_graph)
View(ny_graph)
print(node_names)
print(node_names[1])
print(node_names[[1]])
print(node_names[[1]][1])
ny_graph <- ny_graph + edge(node_names[[1]][1]), node_names[[1]][2]))
ny_graph <- ny_graph + edge(node_names[[1]][1], node_names[[1]][2])
# build a graph with to/from locations as nodes,
#   and avg_trip and total_trips as edge attributes
ny_graph <- graph.empty(0, TRUE)
plot(ny_graph)
print(node_names[[1]][1])
#add_vertices(ny_graph, 2, color='blue',list(node_names[1], node_names[2]) )
ny_graph <- ny_graph + vertex(node_names[[1]][1])
ny_graph <- ny_graph + vertex(node_names[[1]][2])
ny_graph <- ny_graph + edge(node_names[[1]][1], node_names[[1]][2])
plot(ny_graph)
for (idx in ls(agg))
{
#print(idx)
#print(agg[[idx]])
node_names <- strsplit(idx, '-')
#print(node_names[[1]][1])
#add_vertices(ny_graph, 2, color='blue',list(node_names[1], node_names[2]) )
ny_graph <- ny_graph + vertex(node_names[[1]][1])
ny_graph <- ny_graph + vertex(node_names[[1]][2])
ny_graph <- ny_graph + edge(node_names[[1]][1], node_names[[1]][2])
}
plot(ny_graph)
# build a graph with to/from locations as nodes,
#   and avg_trip and total_trips as edge attributes
ny_graph <- graph.empty(0, TRUE)
print(agg)
for (idx in ls(agg))
{
#print(idx)
#print(agg[[idx]])
node_names <- strsplit(idx, '-')
#print(node_names[[1]][1])
#add_vertices(ny_graph, 2, color='blue',list(node_names[1], node_names[2]) )
ny_graph <- ny_graph + vertex(node_names[[1]][1])
ny_graph <- ny_graph + vertex(node_names[[1]][2])
ny_graph <- ny_graph + edge(node_names[[1]][1], node_names[[1]][2])
}
plot(ny_graph)
print(ny_graph)
print(agg)
delete(agg['NA-NA'])
del(agg['NA-NA'])
del(agg, 'NA-NA')
delete(agg, 'NA-NA')
delete(agg[['NA-NA']])
print(agg)
delete('NA-NA', agg)
print(agg)
# build a graph with to/from locations as nodes,
#   and avg_trip and total_trips as edge attributes
ny_graph <- graph.empty(0, TRUE)
plot(ny_graph)
for (idx in ls(agg))
{
#print(idx)
#print(agg[[idx]])
node_names <- strsplit(idx, '-')
#print(node_names[[1]][1])
#add_vertices(ny_graph, 2, color='blue',list(node_names[1], node_names[2]) )
ny_graph <- ny_graph + vertex(node_names[[1]][1])
ny_graph <- ny_graph + vertex(node_names[[1]][2])
ny_graph <- ny_graph + edge(node_names[[1]][1], node_names[[1]][2])
}
plot(ny_graph)
print(ny_graph)
print(agg)
# build a graph with to/from locations as nodes,
#   and avg_trip and total_trips as edge attributes
ny_graph <- graph.empty(0, TRUE)
plot(ny_graph)
for (idx in ls(agg))
{
#print(idx)
#print(agg[[idx]])
node_names <- strsplit(idx, '-')
#print(node_names[[1]][1])
#add_vertices(ny_graph, 2, color='blue',list(node_names[1], node_names[2]) )
ny_graph <- ny_graph + vertex(node_names[[1]][1])
ny_graph <- ny_graph + vertex(node_names[[1]][2])
ny_graph <- ny_graph + edge(node_names[[1]][1], node_names[[1]][2], weight=agg[[idx]][2], length=agg[[idx]][3])
}
plot(ny_graph)
print(ny_graph)
ny_graph <- ny_graph + edge(node_names[[1]][1], node_names[[1]][2], weight=agg[[idx]][2])
# build a graph with to/from locations as nodes,
#   and avg_trip and total_trips as edge attributes
ny_graph <- graph.empty(0, TRUE)
plot(ny_graph)
for (idx in ls(agg))
{
#print(idx)
#print(agg[[idx]])
node_names <- strsplit(idx, '-')
#print(node_names[[1]][1])
#add_vertices(ny_graph, 2, color='blue',list(node_names[1], node_names[2]) )
ny_graph <- ny_graph + vertex(node_names[[1]][1])
ny_graph <- ny_graph + vertex(node_names[[1]][2])
ny_graph <- ny_graph + edge(node_names[[1]][1], node_names[[1]][2], weight=agg[[idx]][2])
}
plot(ny_graph)
print(ny_graph)
ny_graph <- ny_graph + edge(node_names[[1]][1], node_names[[1]][2], list(weight=agg[[idx]][2], length=agg[[idx]][3] ))
# build a graph with to/from locations as nodes,
#   and avg_trip and total_trips as edge attributes
ny_graph <- graph.empty(0, TRUE)
plot(ny_graph)
for (idx in ls(agg))
{
#print(idx)
#print(agg[[idx]])
node_names <- strsplit(idx, '-')
#print(node_names[[1]][1])
#add_vertices(ny_graph, 2, color='blue',list(node_names[1], node_names[2]) )
ny_graph <- ny_graph + vertex(node_names[[1]][1])
ny_graph <- ny_graph + vertex(node_names[[1]][2])
ny_graph <- ny_graph + edge(node_names[[1]][1], node_names[[1]][2], list(weight=agg[[idx]][2], length=agg[[idx]][3] ))
}
print(node_names[[1]][1])
print(node_names[[1]][2])
print(list(weight=agg[[idx]][2], length=agg[[idx]][3] ))
ny_graph <- ny_graph + edge(node_names[[1]][1], node_names[[1]][2], list(weight=agg[[idx]][2], length=agg[[idx]][3] ))
plot(ny_graph)
print(ny_graph)
ny_graph <- ny_graph + edge(node_names[[1]][1], node_names[[1]][2], list(weight=agg[[idx]][2], length=agg[[idx]][3] ))
ny_graph <- add_edge(ny_graph, c( node_names[[1]][1], node_names[[1]][2] ) , list(weight=agg[[idx]][2], length=agg[[idx]][3] ))
ny_graph <- add_edges(ny_graph, c( node_names[[1]][1], node_names[[1]][2] ) , list(weight=agg[[idx]][2], length=agg[[idx]][3] ))
ny_graph <- add_edges(ny_graph, c( node_names[[1]][1], node_names[[1]][2] ) , c(weight=agg[[idx]][2], length=agg[[idx]][3] ))
ny_graph <- add_edges(ny_graph, c( node_names[[1]][1], node_names[[1]][2] ) , NULL, c(weight=agg[[idx]][2], length=agg[[idx]][3] ))
ny_graph <- add_edges(ny_graph, c( node_names[[1]][1], node_names[[1]][2] ) ,  c(weight=agg[[idx]][2], length=agg[[idx]][3] ))
ny_graph <- ny_graph +edge(ny_graph, c( node_names[[1]][1], node_names[[1]][2] ) ,  c(weight=agg[[idx]][2], length=agg[[idx]][3] ))
ny_graph <- ny_graph +edge(ny_graph, c( node_names[[1]][1], node_names[[1]][2] ) ,  list(weight=agg[[idx]][2], length=agg[[idx]][3] ))
ny_graph <- ny_graph +edge(node_names[[1]][1], node_names[[1]][2] ,  list(weight=agg[[idx]][2], length=agg[[idx]][3] ))
plot(ny_graph)
# build a graph with to/from locations as nodes,
#   and avg_trip and total_trips as edge attributes
ny_graph <- graph.empty(0, TRUE)
plot(ny_graph)
for (idx in ls(agg))
{
#print(idx)
#print(agg[[idx]])
node_names <- strsplit(idx, '-')
#print(node_names[[1]][1])
#add_vertices(ny_graph, 2, color='blue',list(node_names[1], node_names[2]) )
ny_graph <- ny_graph + vertex(node_names[[1]][1])
ny_graph <- ny_graph + vertex(node_names[[1]][2])
print(list(weight=agg[[idx]][2], length=agg[[idx]][3] ))
ny_graph <- ny_graph +edge(node_names[[1]][1], node_names[[1]][2] ,  list(weight=agg[[idx]][2], length=agg[[idx]][3] ))
}
plot(ny_graph)
g <- make_empty_graph(n = 5) %>%
add_edges(c(1,2, 2,3, 3,4, 4,5)) %>%
set_edge_attr("color", value = "red") %>%
add_edges(c(5,1), color = "green")
E(g)[[]]
plot(g)
g <- make_ring(10) %>%
set_edge_attr("color", value = "red")
g <- g + edge(1, 5, color = "green") +
edge(2, 6, color = "blue") -
edge("8|9")
E(g)[[]]
g %>%
add_layout_(in_circle()) %>%
plot()
g <- make_ring(10) + edges(1:10)
plot(g)
g <- g + edge(1, 5, list(color = "green", weight= 55) +
E(g)[[]]
plot(g)
g <- g + edge(1, 5, list(color = "green", weight= 55)) +
edge(2, 6, color = "blue") -
edge("8|9")
g <- make_ring(10) %>%
set_edge_attr("color", value = "red")
g <- g + edge(1, 5, list(color = "green", weight= 55)) +
edge(2, 6, color = "blue") -
edge("8|9")
E(g)[[]]
g %>%
add_layout_(in_circle()) %>%
plot()
g <- make_ring(10) + edges(1:10)
plot(g)
g <- make_ring(10) %>%
set_edge_attr("color", value = "red")
g <- g + edge(1, 5, list(color = "green", weight= 5500)) +
edge(2, 6, color = "blue") -
edge("8|9")
E(g)[[]]
g %>%
add_layout_(in_circle()) %>%
plot()
g <- make_ring(10) + edges(1:10)
plot(g)
g <- make_ring(10) %>%
set_edge_attr("color", value = "red")
g <- g + edge(1, 5, list(color = "green", length= 5500)) +
edge(2, 6, color = "blue") -
edge("8|9")
E(g)[[]]
g %>%
add_layout_(in_circle()) %>%
plot()
g <- make_ring(10) + edges(1:10)
plot(g)
g <- make_ring(10) %>%
set_edge_attr("color", value = "red")
g <- g + edge(1, 5, color = "green") +
edge(2, 6, color = "blue") -
edge("8|9")
E(g)[[]]
g %>%
add_layout_(in_circle()) %>%
plot()
g <- make_ring(10) + edges(1:10)
plot(g)
ny_graph <- ny_graph +edge(node_names[[1]][1], node_names[[1]][2] , weight=agg[[idx]][2], length=agg[[idx]][3] )
plot(ny_graph)
# build a graph with to/from locations as nodes,
#   and avg_trip and total_trips as edge attributes
ny_graph <- graph.empty(0, TRUE)
plot(ny_graph)
for (idx in ls(agg))
{
#print(idx)
#print(agg[[idx]])
node_names <- strsplit(idx, '-')
#print(node_names[[1]][1])
#add_vertices(ny_graph, 2, color='blue',list(node_names[1], node_names[2]) )
ny_graph <- ny_graph + vertex(node_names[[1]][1])
ny_graph <- ny_graph + vertex(node_names[[1]][2])
print(list(weight=agg[[idx]][2], length=agg[[idx]][3] ))
ny_graph <- ny_graph +edge(node_names[[1]][1], node_names[[1]][2] , weight=agg[[idx]][2], length=agg[[idx]][3] )
}
plot(ny_graph)
print(ny_graph)
# build a graph with to/from locations as nodes,
#   and avg_trip and total_trips as edge attributes
ny_graph <- graph.empty(0, TRUE)
for (idx in ls(agg))
{
#print(idx)
#print(agg[[idx]])
node_names <- strsplit(idx, '-')
#print(node_names[[1]][1])
#add_vertices(ny_graph, 2, color='blue',list(node_names[1], node_names[2]) )
ny_graph <- ny_graph + vertex(node_names[[1]][1])
ny_graph <- ny_graph + vertex(node_names[[1]][2])
print(list(weight=agg[[idx]][2], length=agg[[idx]][3] ))
ny_graph <- ny_graph +edge(node_names[[1]][1], node_names[[1]][2] , length=agg[[idx]][3] )
#weight=agg[[idx]][2],
}
plot(ny_graph)
print(ny_graph)
# build a graph with to/from locations as nodes,
#   and avg_trip and total_trips as edge attributes
ny_graph <- graph.empty(0, TRUE)
for (idx in ls(agg))
{
#print(idx)
#print(agg[[idx]])
node_names <- strsplit(idx, '-')
#print(node_names[[1]][1])
#add_vertices(ny_graph, 2, color='blue',list(node_names[1], node_names[2]) )
ny_graph <- ny_graph + vertex(node_names[[1]][1])
ny_graph <- ny_graph + vertex(node_names[[1]][2])
print(list(weight=agg[[idx]][2], length=agg[[idx]][3] ))
ny_graph <- ny_graph +edge(node_names[[1]][1], node_names[[1]][2] , weight=agg[[idx]][2])
#, length=agg[[idx]][3]
}
plot(ny_graph)
print(ny_graph)
ny_graph <- ny_graph +edge(node_names[[1]][1], node_names[[1]][2] , weight=agg[[idx]][2], color='purple')
plot(ny_graph)
print(agg[[idx]][2])
print(as.double(agg[[idx]][2]))
ny_graph <- ny_graph +edge(node_names[[1]][1], node_names[[1]][2] , trips=agg[[idx]][2], color='purple')
# build a graph with to/from locations as nodes,
#   and avg_trip and total_trips as edge attributes
ny_graph <- graph.empty(0, TRUE)
for (idx in ls(agg))
{
#print(idx)
#print(agg[[idx]])
node_names <- strsplit(idx, '-')
#print(node_names[[1]][1])
#add_vertices(ny_graph, 2, color='blue',list(node_names[1], node_names[2]) )
ny_graph <- ny_graph + vertex(node_names[[1]][1])
ny_graph <- ny_graph + vertex(node_names[[1]][2])
print(list(weight=agg[[idx]][2], length=agg[[idx]][3] ))
ny_graph <- ny_graph +edge(node_names[[1]][1], node_names[[1]][2] , trips=agg[[idx]][2], color='purple')
#print(as.double(agg[[idx]][2]))
#, length=agg[[idx]][3]
}
plot(ny_graph)
print(ny_graph)
print(ny_graph)
ny_graph <- ny_graph +edge(node_names[[1]][1], node_names[[1]][2] , trips=as.double(agg[[idx]][2]), time = as.double(agg[[idx]][3]), color='purple')
# build a graph with to/from locations as nodes,
#   and avg_trip and total_trips as edge attributes
ny_graph <- graph.empty(0, TRUE)
plot(ny_graph)
for (idx in ls(agg))
{
#print(idx)
#print(agg[[idx]])
node_names <- strsplit(idx, '-')
#print(node_names[[1]][1])
#add_vertices(ny_graph, 2, color='blue',list(node_names[1], node_names[2]) )
ny_graph <- ny_graph + vertex(node_names[[1]][1])
ny_graph <- ny_graph + vertex(node_names[[1]][2])
print(list(weight=agg[[idx]][2], length=agg[[idx]][3] ))
ny_graph <- ny_graph +edge(node_names[[1]][1], node_names[[1]][2] , trips=as.double(agg[[idx]][2]), time = as.double(agg[[idx]][3]), color='purple')
#print(as.double(agg[[idx]][2]))
#, length=agg[[idx]][3]
}
plot(ny_graph)
print(ny_graph)
for (idx in ls(agg))
{
#print(idx)
#print(agg[[idx]])
node_names <- strsplit(idx, '-')
#print(node_names[[1]][1])
#add_vertices(ny_graph, 2, color='blue',list(node_names[1], node_names[2]) )
ny_graph <- ny_graph + vertex(node_names[[1]][1])
ny_graph <- ny_graph + vertex(node_names[[1]][2])
print(list(weight=agg[[idx]][2], length=agg[[idx]][3] ))
ny_graph <- ny_graph +edge(node_names[[1]][1], node_names[[1]][2] , trips=as.double(agg[[idx]][2]), time = as.double(agg[[idx]][3]), color='green')
#print(as.double(agg[[idx]][2]))
#, length=agg[[idx]][3]
}
plot(ny_graph)
print(ny_graph)
# build a graph with to/from locations as nodes,
#   and avg_trip and total_trips as edge attributes
ny_graph <- graph.empty(0, TRUE)
# build a graph with to/from locations as nodes,
#   and avg_trip and total_trips as edge attributes
ny_graph <- graph.empty(0, TRUE)
for (idx in ls(agg))
{
#print(idx)
#print(agg[[idx]])
node_names <- strsplit(idx, '-')
#print(node_names[[1]][1])
#add_vertices(ny_graph, 2, color='blue',list(node_names[1], node_names[2]) )
ny_graph <- ny_graph + vertex(node_names[[1]][1])
ny_graph <- ny_graph + vertex(node_names[[1]][2])
print(list(weight=agg[[idx]][2], length=agg[[idx]][3] ))
ny_graph <- ny_graph +edge(node_names[[1]][1], node_names[[1]][2] , trips=as.double(agg[[idx]][2]), time = as.double(agg[[idx]][3]), color='green')
#print(as.double(agg[[idx]][2]))
#, length=agg[[idx]][3]
}
plot(ny_graph)
print(ny_graph)
lnyc = read.csv(("~/Downloads/tripdata/green_tripdata_2018-01.csv"))
#nyc <- head(lnyc)
nyc <- lync
#nyc <- head(lnyc)
nyc <- lnyc
agg <-  hash() # (,1,5)
colnames(agg) <- c("start-end", c("total_time", "num_trips", "avg_time"))
for (idx in 1:length(nyc)) {
i <- nyc[idx,]
print (i)
strKey <-paste(i["PULocationID"], i["DOLocationID"], sep = '-')
print(strKey)
if(exists(strKey, agg))
{
print(agg[[strKey]][3] )
total_time <- agg[[strKey]][1] + difftime(i[["lpep_dropoff_datetime"]], i[["lpep_pickup_datetime"]])
total_trips <- agg[[strKey]][2] + 1
agg[[strKey]] <- c(total_time, total_trips,0)
}
else
{
total_time <- difftime(i[["lpep_dropoff_datetime"]], i[["lpep_pickup_datetime"]])
total_trips <- 1
agg[[strKey]] <- c(total_time, total_trips,0)
}
}
print(agg)
print(nyc)
for (idx in 1:length(nyc)) {
i <- nyc[idx,]
print (i)
strKey <-paste(i["PULocationID"], i["DOLocationID"], sep = '-')
print(strKey)
if(exists(strKey, agg))
{
print(agg[[strKey]][3] )
total_time <- agg[[strKey]][1] + difftime(i[["lpep_dropoff_datetime"]], i[["lpep_pickup_datetime"]])
total_trips <- agg[[strKey]][2] + 1
agg[[strKey]] <- c(total_time, total_trips,0)
}
else
{
total_time <- difftime(i[["lpep_dropoff_datetime"]], i[["lpep_pickup_datetime"]])
total_trips <- 1
agg[[strKey]] <- c(total_time, total_trips,0)
}
}
for (idx in 1:length(nyc)) {
i <- nyc[idx,]
print (i)
strKey <-paste(i["PULocationID"], i["DOLocationID"], sep = '-')
print(strKey)
if(exists(strKey, agg))
{
print(agg[[strKey]][3] )
total_time <- agg[[strKey]][1] + difftime(i[["lpep_dropoff_datetime"]], i[["lpep_pickup_datetime"]])
total_trips <- agg[[strKey]][2] + 1
agg[[strKey]] <- c(total_time, total_trips,0)
}
else
{
total_time <- difftime(i[["lpep_dropoff_datetime"]], i[["lpep_pickup_datetime"]])
total_trips <- 1
agg[[strKey]] <- c(total_time, total_trips,0)
}
}
print(agg)
for (idx in ls(agg))
{
#print(toString(idx))
#print(agg[[idx]])
#Average time per trip is total_time / total_trips
avg_trip <- as.double(agg[[idx]][1]) / as.double(agg[[idx]][2])
agg[[idx]][3] <- avg_trip
}
print(agg)
delete('NA-NA', agg)
# build a graph with to/from locations as nodes,
#   and avg_trip and total_trips as edge attributes
ny_graph <- graph.empty(0, TRUE)
plot(ny_graph)
for (idx in ls(agg))
{
#print(idx)
#print(agg[[idx]])
node_names <- strsplit(idx, '-')
#print(node_names[[1]][1])
#add_vertices(ny_graph, 2, color='blue',list(node_names[1], node_names[2]) )
ny_graph <- ny_graph + vertex(node_names[[1]][1])
ny_graph <- ny_graph + vertex(node_names[[1]][2])
print(list(weight=agg[[idx]][2], length=agg[[idx]][3] ))
ny_graph <- ny_graph +edge(node_names[[1]][1], node_names[[1]][2] , trips=as.double(agg[[idx]][2]), time = as.double(agg[[idx]][3]), color='green')
#print(as.double(agg[[idx]][2]))
#, length=agg[[idx]][3]
}
plot(ny_graph)
print(ny_graph)
print(list(weight=agg[[idx]][2], length=agg[[idx]][3] ))
shiny::runApp('city/city')
runApp('city/city')
